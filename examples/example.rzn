// Example Razen program
use std::io;

const VERSION = "1.0.0";

struct Person {
    pub name: str,
    pub age: int,
}

impl Person {
    fun new(name: str, age: int) {
        println(f"Creating person: {name}, age {age}");
    }
    
    fun greet(self) {
        println(f"Hello, my name is {self.name}!");
    }
}

enum Status {
    Active,
    Inactive,
    Pending(str),
}

fun main() {
    const name = "Razen";
    var count = 0;
    
    // F-string example
    println(f"Welcome to {name} v{VERSION}");
    
    // Control flow
    if count < 10 {
        count++;
    } elif count == 10 {
        println("Count is 10");
    } else {
        count--;
    }
    
    // For loop
    for i in 0..10 {
        println(f"Number: {i}");
    }
    
    // While loop
    while count > 0 {
        count--;
    }
    
    // Match expression
    const status = 1;
    match status {
        1 => println("Active"),
        2 => println("Inactive"),
        _ => println("Unknown"),
    }
    
    // Try-catch
    try {
        const result = risky_operation();
    } catch (e) {
        println(f"Error: {e}");
    }
    
    // Array and map
    const numbers = [1, 2, 3, 4, 5];
    const scores = { "Alice": 95, "Bob": 87 };
    
    // Operators
    const power = 2 ** 8;
    const range = 0..=100;
}

fun risky_operation() -> int {
    throw "Something went wrong";
}
